<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Curiously recurring template pattern - Wikipedia</title>
<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Curiously_recurring_template_pattern","wgTitle":"Curiously recurring template pattern","wgCurRevisionId":811602628,"wgRevisionId":811602628,"wgArticleId":4819306,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["CS1 maint: BOT: original-url status unknown","Use dmy dates from January 2012","Articles with example C++ code","Software design patterns","C++"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Curiously_recurring_template_pattern","wgRelevantArticleId":4819306,"wgRequestId":"WnBmXgpAAD4AAJQ2jOoAAABQ","wgIsProbablyEditable":true,"wgRelevantPageIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgFlaggedRevsParams":{"tags":{}},"wgStableRevisionId":null,"wgWikiEditorEnabledModules":[],"wgBetaFeaturesFeatures":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgPopupsShouldSendModuleToUser":true,"wgPopupsConflictsWithNavPopupGadget":false,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en","usePageImages":true,"usePageDescriptions":true},"wgPreferredVariant":"en","wgMFExpandAllSectionsUserOption":false,"wgMFDisplayWikibaseDescriptions":{"search":true,"nearby":true,"watchlist":true,"tagline":false},"wgRelatedArticles":null,"wgRelatedArticlesUseCirrusSearch":true,"wgRelatedArticlesOnlyUseCirrusSearch":false,"wgULSCurrentAutonym":"English","wgNoticeProject":"wikipedia","wgCentralNoticeCookiesToDelete":[],"wgCentralNoticeCategoriesUsingLegacy":["Fundraising","fundraising"],"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgWikibaseItemId":"Q5194797","wgScoreNoteLanguages":{"arabic":"العربية","catalan":"català","deutsch":"Deutsch","english":"English","espanol":"español","italiano":"italiano","nederlands":"Nederlands","norsk":"norsk","portugues":"português","suomi":"suomi","svenska":"svenska","vlaams":"West-Vlams"},"wgScoreDefaultNoteLanguage":"nederlands","wgCentralAuthMobileDomain":false,"wgCodeMirrorEnabled":false,"wgVisualEditorToolbarScrollOffset":0,"wgVisualEditorUnsupportedEditParams":["undo","undoafter","veswitched"],"wgEditSubmitButtonLabelPublish":true});mw.loader.state({"ext.gadget.charinsert-styles":"ready","ext.globalCssJs.user.styles":"ready","ext.globalCssJs.site.styles":"ready","site.styles":"ready","noscript":"ready","user.styles":"ready","user":"ready","user.options":"ready","user.tokens":"loading","ext.cite.styles":"ready","ext.pygments":"ready","wikibase.client.init":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","ext.wikimediaBadges":"ready","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","mediawiki.sectionAnchor":"ready","mediawiki.skinning.interface":"ready","skins.vector.styles":"ready","ext.globalCssJs.user":"ready","ext.globalCssJs.site":"ready"});mw.loader.implement("user.tokens@1dqfd7l",function ( $, jQuery, require, module ) {
mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});/*@nomin*/

});mw.loader.load(["ext.cite.a11y","site","mediawiki.page.startup","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.toc","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.watchlist-notice","ext.gadget.DRN-wizard","ext.gadget.charinsert","ext.gadget.refToolbar","ext.gadget.extra-toolbar-buttons","ext.gadget.switcher","ext.centralauth.centralautologin","ext.popups","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.eventLogging.subscriber","ext.wikimediaEvents","ext.navigationTiming","ext.uls.eventlogger","ext.uls.init","ext.uls.interface","ext.centralNotice.geoIP","ext.centralNotice.startUp","skins.vector.js"]);});</script>
<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=ext.cite.styles%7Cext.pygments%2CwikimediaBadges%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles%7Cwikibase.client.init&amp;only=styles&amp;skin=vector"/>
<script async="" src="/w/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=ext.gadget.charinsert-styles&amp;only=styles&amp;skin=vector"/>
<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.31.0-wmf.17"/>
<meta name="referrer" content="origin-when-cross-origin"/>
<link rel="alternate" href="android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Curiously_recurring_template_pattern"/>
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Curiously_recurring_template_pattern&amp;action=edit"/>
<link rel="edit" title="Edit this page" href="/w/index.php?title=Curiously_recurring_template_pattern&amp;action=edit"/>
<link rel="apple-touch-icon" href="/static/apple-touch/wikipedia.png"/>
<link rel="shortcut icon" href="/static/favicon/wikipedia.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="//en.wikipedia.org/w/api.php?action=rsd"/>
<link rel="license" href="//creativecommons.org/licenses/by-sa/3.0/"/>
<link rel="canonical" href="https://en.wikipedia.org/wiki/Curiously_recurring_template_pattern"/>
<link rel="dns-prefetch" href="//login.wikimedia.org"/>
<link rel="dns-prefetch" href="//meta.wikimedia.org" />
<!--[if lt IE 9]><script src="/w/load.php?debug=false&amp;lang=en&amp;modules=html5shiv&amp;only=scripts&amp;skin=vector&amp;sync=1"></script><![endif]-->
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Curiously_recurring_template_pattern rootpage-Curiously_recurring_template_pattern skin-vector action-view">		<div id="mw-page-base" class="noprint"></div>
                <div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
		        <a id="top"></a>
			<div id="siteNotice" class="mw-body-content"><!-- CentralNotice --></div><div class="mw-indicators mw-body-content">
</div>
<h1 id="firstHeading" class="firstHeading" lang="en">Curiously recurring template pattern</h1>			<div id="bodyContent" class="mw-body-content">
                                <div id="siteSub" class="noprint">From Wikipedia, the free encyclopedia</div>				<div id="contentSub"></div>
				                                <div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="mw-parser-output"><p>The <b>curiously recurring template pattern</b> (<b>CRTP</b>) is an idiom in <a href="/wiki/C%2B%2B" title="C++">C++</a> in which a class <code>X</code> derives from a class <a href="/wiki/Template_(C%2B%2B)" title="Template (C++)">template</a> instantiation using <code>X</code> itself as template argument.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1">[1]</a></sup> More generally it is known as <b>F-bound polymorphism</b>, and it is a form of <a href="/wiki/F-bounded_quantification" class="mw-redirect" title="F-bounded quantification"><i>F</i>-bounded quantification</a>.</p>
<p></p>
<div id="toc" class="toc">
<div class="toctitle" lang="en" dir="ltr" xml:lang="en">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#General_form"><span class="tocnumber">2</span> <span class="toctext">General form</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Static_polymorphism"><span class="tocnumber">3</span> <span class="toctext">Static polymorphism</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Object_counter"><span class="tocnumber">4</span> <span class="toctext">Object counter</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Polymorphic_chaining"><span class="tocnumber">5</span> <span class="toctext">Polymorphic chaining</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="#Polymorphic_copy_construction"><span class="tocnumber">6</span> <span class="toctext">Polymorphic copy construction</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="#Pitfalls"><span class="tocnumber">7</span> <span class="toctext">Pitfalls</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="#See_also"><span class="tocnumber">8</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="#References"><span class="tocnumber">9</span> <span class="toctext">References</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="History">History</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Curiously_recurring_template_pattern&amp;action=edit&amp;section=1" title="Edit section: History">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The technique was formalized in 1989 as "<i>F</i>-bounded quantification."<sup id="cite_ref-2" class="reference"><a href="#cite_note-2">[2]</a></sup> The name "CRTP" was independently coined by <a href="/wiki/Jim_Coplien" title="Jim Coplien">Jim Coplien</a> in 1995,<sup id="cite_ref-3" class="reference"><a href="#cite_note-3">[3]</a></sup> who had observed it in some of the earliest <a href="/wiki/C%2B%2B" title="C++">C++</a> template code as well as in code examples that <a href="/wiki/Timothy_Budd" title="Timothy Budd">Timothy Budd</a> created in his multiparadigm language <a href="/wiki/Leda_(programming_language)" title="Leda (programming language)">Leda</a>.<sup id="cite_ref-4" class="reference"><a href="#cite_note-4">[4]</a></sup> It is sometimes called "Upside-Down Inheritance"<sup id="cite_ref-5" class="reference"><a href="#cite_note-5">[5]</a></sup><sup id="cite_ref-6" class="reference"><a href="#cite_note-6">[6]</a></sup> due to the way it allows class hierarchies to be extended by substituting different base classes.</p>
<h2><span class="mw-headline" id="General_form">General form</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Curiously_recurring_template_pattern&amp;action=edit&amp;section=2" title="Edit section: General form">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="c1">// The Curiously Recurring Template Pattern (CRTP)</span>
<span class="k">template</span><span class="o">&lt;</span><span class="k">class</span> <span class="nc">T</span><span class="o">&gt;</span>
<span class="k">class</span> <span class="nc">Base</span>
<span class="p">{</span>
    <span class="c1">// methods within Base can use template to access members of Derived</span>
<span class="p">};</span>
<span class="k">class</span> <span class="nc">Derived</span> <span class="o">:</span> <span class="k">public</span> <span class="n">Base</span><span class="o">&lt;</span><span class="n">Derived</span><span class="o">&gt;</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
<span class="p">};</span>
</pre></div>
<p>Some use cases for this pattern are <a href="/wiki/Template_metaprogramming#Static_polymorphism" title="Template metaprogramming">static polymorphism</a> and other metaprogramming techniques such as those described by <a href="/wiki/Andrei_Alexandrescu" title="Andrei Alexandrescu">Andrei Alexandrescu</a> in <i><a href="/wiki/Modern_C%2B%2B_Design" title="Modern C++ Design">Modern C++ Design</a></i>.<sup id="cite_ref-7" class="reference"><a href="#cite_note-7">[7]</a></sup> It also figures prominently in the C++ implementation of the <a href="/wiki/Data,_Context_and_Interaction" class="mw-redirect" title="Data, Context and Interaction">Data, Context and Interaction</a> paradigm.<sup id="cite_ref-8" class="reference"><a href="#cite_note-8">[8]</a></sup></p>
<h2><span class="mw-headline" id="Static_polymorphism">Static polymorphism</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Curiously_recurring_template_pattern&amp;action=edit&amp;section=3" title="Edit section: Static polymorphism">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Typically, the base class template will take advantage of the fact that member function bodies (definitions) are not instantiated until long after their declarations, and will use members of the derived class within its own member functions, via the use of a <a href="/wiki/Type_conversion" title="Type conversion">cast</a>; e.g.:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">template</span> <span class="o">&lt;</span><span class="k">class</span> <span class="nc">T</span><span class="o">&gt;</span>
<span class="k">struct</span> <span class="n">Base</span>
<span class="p">{</span>
    <span class="kt">void</span> <span class="n">interface</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="c1">// ...</span>
	<span class="k">static_cast</span><span class="o">&lt;</span><span class="n">T</span><span class="o">*&gt;</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">implementation</span><span class="p">();</span>
	<span class="c1">// ...</span>
    <span class="p">}</span>

    <span class="k">static</span> <span class="kt">void</span> <span class="n">static_func</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="c1">// ...</span>
	<span class="n">T</span><span class="o">::</span><span class="n">static_sub_func</span><span class="p">();</span>
	<span class="c1">// ...</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="k">struct</span> <span class="nl">Derived</span> <span class="p">:</span> <span class="n">Base</span><span class="o">&lt;</span><span class="n">Derived</span><span class="o">&gt;</span>
<span class="p">{</span>
    <span class="kt">void</span> <span class="n">implementation</span><span class="p">();</span>
    <span class="k">static</span> <span class="kt">void</span> <span class="nf">static_sub_func</span><span class="p">();</span>
<span class="p">};</span>
</pre></div>
<p>In the above example, note in particular that the function Base&lt;Derived&gt;::interface(), though <i>declared</i> before the existence of the struct Derived is known by the compiler (i.e., before Derived is declared), is not actually <i>instantiated</i> by the compiler until it is actually <i>called</i> by some later code which occurs <i>after</i> the declaration of Derived (not shown in the above example), so that at the time the function "implementation" is instantiated, the declaration of Derived::implementation() is known.</p>
<p>This technique achieves a similar effect to the use of <a href="/wiki/Virtual_function" title="Virtual function">virtual functions</a>, without the costs (and some flexibility) of <a href="/wiki/Dynamic_polymorphism" class="mw-redirect" title="Dynamic polymorphism">dynamic polymorphism</a>. This particular use of the CRTP has been called "simulated dynamic binding" by some.<sup id="cite_ref-9" class="reference"><a href="#cite_note-9">[9]</a></sup> This pattern is used extensively in the Windows <a href="/wiki/Active_Template_Library" title="Active Template Library">ATL</a> and <a href="/wiki/WTL" class="mw-redirect" title="WTL">WTL</a> libraries.</p>
<p>To elaborate on the above example, consider a base class with <b>no virtual functions</b>. Whenever the base class calls another member function, it will always call its own base class functions. When we derive a class from this base class, we inherit all the member variables and member functions that weren't overridden (no constructors or destructors). If the derived class calls an inherited function which then calls another member function, that function will never call any derived or overridden member functions in the derived class.</p>
<p>However, if base class member functions use CRTP for all member function calls, the overridden functions in the derived class will be selected at compile time. This effectively emulates the virtual function call system at compile time without the costs in size or function call overhead (<a href="/wiki/VTBL" class="mw-redirect" title="VTBL">VTBL</a> structures, and method lookups, multiple-inheritance VTBL machinery) at the disadvantage of not being able to make this choice at runtime.</p>
<h2><span class="mw-headline" id="Object_counter">Object counter</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Curiously_recurring_template_pattern&amp;action=edit&amp;section=4" title="Edit section: Object counter">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The main purpose of an object counter is retrieving statistics of object creation and destruction for a given class.<sup id="cite_ref-10" class="reference"><a href="#cite_note-10">[10]</a></sup> This can be easily solved using CRTP:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span> <span class="n">T</span><span class="o">&gt;</span>
<span class="k">struct</span> <span class="n">counter</span>
<span class="p">{</span>
    <span class="k">static</span> <span class="kt">int</span> <span class="n">objects_created</span><span class="p">;</span>
    <span class="k">static</span> <span class="kt">int</span> <span class="n">objects_alive</span><span class="p">;</span>

    <span class="n">counter</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="o">++</span><span class="n">objects_created</span><span class="p">;</span>
	<span class="o">++</span><span class="n">objects_alive</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">counter</span><span class="p">(</span><span class="k">const</span> <span class="n">counter</span><span class="o">&amp;</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="o">++</span><span class="n">objects_created</span><span class="p">;</span>
	<span class="o">++</span><span class="n">objects_alive</span><span class="p">;</span>
    <span class="p">}</span>
<span class="k">protected</span><span class="o">:</span>
    <span class="o">~</span><span class="n">counter</span><span class="p">()</span> <span class="c1">// objects should never be removed through pointers of this type</span>
    <span class="p">{</span>
        <span class="o">--</span><span class="n">objects_alive</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>
<span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span> <span class="n">T</span><span class="o">&gt;</span> <span class="kt">int</span> <span class="n">counter</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;::</span><span class="n">objects_created</span><span class="p">(</span> <span class="mi">0</span> <span class="p">);</span>
<span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span> <span class="n">T</span><span class="o">&gt;</span> <span class="kt">int</span> <span class="n">counter</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;::</span><span class="n">objects_alive</span><span class="p">(</span> <span class="mi">0</span> <span class="p">);</span>

<span class="k">class</span> <span class="nc">X</span> <span class="o">:</span> <span class="n">counter</span><span class="o">&lt;</span><span class="n">X</span><span class="o">&gt;</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
<span class="p">};</span>

<span class="k">class</span> <span class="nc">Y</span> <span class="o">:</span> <span class="n">counter</span><span class="o">&lt;</span><span class="n">Y</span><span class="o">&gt;</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
<span class="p">};</span>
</pre></div>
<p>Each time an object of class <code>X</code> is created, the constructor of <code>counter&lt;X&gt;</code> is called, incrementing both the created and alive count. Each time an object of class <code>X</code> is destroyed, the alive count is decremented. It is important to note that <code>counter&lt;X&gt;</code> and <code>counter&lt;Y&gt;</code> are two separate classes and this is why they will keep separate counts of <code>X</code>'s and <code>Y</code>'s. In this example of CRTP, this distinction of classes is the only use of the template parameter (<code>T</code> in <code>counter&lt;T&gt;</code>) and the reason why we cannot use a simple un-templated base class.</p>
<h2><span class="mw-headline" id="Polymorphic_chaining">Polymorphic chaining</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Curiously_recurring_template_pattern&amp;action=edit&amp;section=5" title="Edit section: Polymorphic chaining">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p><a href="/wiki/Method_chaining" title="Method chaining">Method chaining</a>, also known as named parameter idiom, is a common syntax for invoking multiple method calls in object-oriented programming languages. Each method returns an object, allowing the calls to be chained together in a single statement without requiring variables to store the intermediate results.</p>
<p>When the named parameter object pattern is applied to an object hierarchy, things can get wrong. Suppose we have such a base class:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">class</span> <span class="nc">Printer</span>
<span class="p">{</span>
<span class="k">public</span><span class="o">:</span>
      <span class="n">Printer</span><span class="p">(</span><span class="n">ostream</span><span class="o">&amp;</span> <span class="n">pstream</span><span class="p">)</span> <span class="o">:</span> <span class="n">m_stream</span><span class="p">(</span><span class="n">pstream</span><span class="p">)</span> <span class="p">{}</span>

      <span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span> <span class="n">T</span><span class="o">&gt;</span>
      <span class="n">Printer</span><span class="o">&amp;</span> <span class="n">print</span><span class="p">(</span><span class="n">T</span><span class="o">&amp;&amp;</span> <span class="n">t</span><span class="p">)</span> <span class="p">{</span> <span class="n">m_stream</span> <span class="o">&lt;&lt;</span> <span class="n">t</span><span class="p">;</span> <span class="k">return</span> <span class="o">*</span><span class="k">this</span><span class="p">;</span> <span class="p">}</span>

      <span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span> <span class="n">T</span><span class="o">&gt;</span>
      <span class="n">Printer</span><span class="o">&amp;</span> <span class="n">println</span><span class="p">(</span><span class="n">T</span><span class="o">&amp;&amp;</span> <span class="n">t</span><span class="p">)</span> <span class="p">{</span> <span class="n">m_stream</span> <span class="o">&lt;&lt;</span> <span class="n">t</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="k">return</span> <span class="o">*</span><span class="k">this</span><span class="p">;</span> <span class="p">}</span>
<span class="k">private</span><span class="o">:</span>
      <span class="n">ostream</span><span class="o">&amp;</span> <span class="n">m_stream</span><span class="p">;</span>
<span class="p">};</span>
</pre></div>
<p>Prints can be easily chained:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="n">Printer</span><span class="p">{</span><span class="n">myStream</span><span class="p">}.</span><span class="n">println</span><span class="p">(</span><span class="s">"hello"</span><span class="p">).</span><span class="n">println</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
</pre></div>
<p>However, if we define the following derived class:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">class</span> <span class="nc">CoutPrinter</span> <span class="o">:</span> <span class="k">public</span> <span class="n">Printer</span>
<span class="p">{</span>
<span class="k">public</span><span class="o">:</span>
     <span class="n">CoutPrinter</span><span class="p">()</span> <span class="o">:</span> <span class="n">Printer</span><span class="p">(</span><span class="n">cout</span><span class="p">)</span> <span class="p">{}</span>

     <span class="n">CoutPrinter</span><span class="o">&amp;</span> <span class="n">SetConsoleColor</span><span class="p">(</span><span class="n">Color</span> <span class="n">c</span><span class="p">)</span> <span class="p">{</span> <span class="p">...</span> <span class="k">return</span> <span class="o">*</span><span class="k">this</span><span class="p">;</span> <span class="p">}</span>
<span class="p">};</span>
</pre></div>
<p>we "lose" the concrete class as soon as we invoke a function of the base:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
                             <span class="n">v</span><span class="o">--</span> <span class="n">we</span> <span class="n">have</span> <span class="n">a</span> <span class="err">'</span><span class="n">Printer</span><span class="err">'</span> <span class="n">here</span><span class="p">,</span> <span class="n">not</span> <span class="n">a</span> <span class="err">'</span><span class="n">CoutPrinter</span><span class="err">'</span>
<span class="n">CoutPrinter</span><span class="p">().</span><span class="n">print</span><span class="p">(</span><span class="s">"Hello "</span><span class="p">).</span><span class="n">SetConsoleColor</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">red</span><span class="p">).</span><span class="n">println</span><span class="p">(</span><span class="s">"Printer!"</span><span class="p">);</span> <span class="c1">// compile error</span>
</pre></div>
<p>This happens because 'print' is a function of the base - 'Printer' - and then it returns a 'Printer' instance.</p>
<p>The CRTP can be used to avoid such problem and to implement "Polymorphic chaining":<sup id="cite_ref-11" class="reference"><a href="#cite_note-11">[11]</a></sup></p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="c1">// Base class</span>
<span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span> <span class="n">ConcretePrinter</span><span class="o">&gt;</span>
<span class="k">class</span> <span class="nc">Printer</span>
<span class="p">{</span>
<span class="k">public</span><span class="o">:</span>
      <span class="n">Printer</span><span class="p">(</span><span class="n">ostream</span><span class="o">&amp;</span> <span class="n">pstream</span><span class="p">)</span> <span class="o">:</span> <span class="n">m_stream</span><span class="p">(</span><span class="n">pstream</span><span class="p">)</span> <span class="p">{}</span>

      <span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span> <span class="n">T</span><span class="o">&gt;</span>
      <span class="n">ConcretePrinter</span><span class="o">&amp;</span> <span class="n">print</span><span class="p">(</span><span class="n">T</span><span class="o">&amp;&amp;</span> <span class="n">t</span><span class="p">)</span>
      <span class="p">{</span>
          <span class="n">m_stream</span> <span class="o">&lt;&lt;</span> <span class="n">t</span><span class="p">;</span>
	  <span class="k">return</span> <span class="k">static_cast</span><span class="o">&lt;</span><span class="n">ConcretePrinter</span><span class="o">&amp;&gt;</span><span class="p">(</span><span class="o">*</span><span class="k">this</span><span class="p">);</span>
      <span class="p">}</span>

      <span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span> <span class="n">T</span><span class="o">&gt;</span>
      <span class="n">ConcretePrinter</span><span class="o">&amp;</span> <span class="n">println</span><span class="p">(</span><span class="n">T</span><span class="o">&amp;&amp;</span> <span class="n">t</span><span class="p">)</span>
      <span class="p">{</span>
          <span class="n">m_stream</span> <span class="o">&lt;&lt;</span> <span class="n">t</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
	  <span class="k">return</span> <span class="k">static_cast</span><span class="o">&lt;</span><span class="n">ConcretePrinter</span><span class="o">&amp;&gt;</span><span class="p">(</span><span class="o">*</span><span class="k">this</span><span class="p">);</span>
      <span class="p">}</span>
<span class="k">private</span><span class="o">:</span>
      <span class="n">ostream</span><span class="o">&amp;</span> <span class="n">m_stream</span><span class="p">;</span>
<span class="p">};</span>

<span class="c1">// Derived class</span>
<span class="k">class</span> <span class="nc">CoutPrinter</span> <span class="o">:</span> <span class="k">public</span> <span class="n">Printer</span><span class="o">&lt;</span><span class="n">CoutPrinter</span><span class="o">&gt;</span>
<span class="p">{</span>
<span class="k">public</span><span class="o">:</span>
     <span class="n">CoutPrinter</span><span class="p">()</span> <span class="o">:</span> <span class="n">Printer</span><span class="p">(</span><span class="n">cout</span><span class="p">)</span> <span class="p">{}</span>

     <span class="n">CoutPrinter</span><span class="o">&amp;</span> <span class="n">SetConsoleColor</span><span class="p">(</span><span class="n">Color</span> <span class="n">c</span><span class="p">)</span> <span class="p">{</span> <span class="p">...</span> <span class="k">return</span> <span class="o">*</span><span class="k">this</span><span class="p">;</span> <span class="p">}</span>
<span class="p">};</span>

<span class="c1">// usage</span>
 <span class="n">CoutPrinter</span><span class="p">().</span><span class="n">print</span><span class="p">(</span><span class="s">"Hello "</span><span class="p">).</span><span class="n">SetConsoleColor</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">red</span><span class="p">).</span><span class="n">println</span><span class="p">(</span><span class="s">"Printer!"</span><span class="p">);</span>
</pre></div>
<h2><span class="mw-headline" id="Polymorphic_copy_construction">Polymorphic copy construction</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Curiously_recurring_template_pattern&amp;action=edit&amp;section=6" title="Edit section: Polymorphic copy construction">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>When using polymorphism, one sometimes needs to create copies of objects by the base class pointer. A commonly used idiom for this is adding a virtual clone function that is defined in every derived class. The CRTP can be used to avoid having to duplicate that function or other similar functions in every derived class.</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="c1">// Base class has a pure virtual function for cloning</span>
<span class="k">class</span> <span class="nc">Shape</span> <span class="p">{</span>
<span class="k">public</span><span class="o">:</span>
    <span class="k">virtual</span> <span class="o">~</span><span class="n">Shape</span><span class="p">()</span> <span class="p">{};</span>
    <span class="k">virtual</span> <span class="n">Shape</span> <span class="o">*</span><span class="nf">clone</span><span class="p">()</span> <span class="k">const</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">};</span>
<span class="c1">// This CRTP class implements clone() for Derived</span>
<span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span> <span class="n">Derived</span><span class="o">&gt;</span>
<span class="k">class</span> <span class="nc">Shape_CRTP</span> <span class="o">:</span> <span class="k">public</span> <span class="n">Shape</span> <span class="p">{</span>
<span class="k">public</span><span class="o">:</span>
    <span class="k">virtual</span> <span class="n">Shape</span> <span class="o">*</span><span class="n">clone</span><span class="p">()</span> <span class="k">const</span> <span class="p">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="n">Derived</span><span class="p">(</span><span class="k">static_cast</span><span class="o">&lt;</span><span class="n">Derived</span> <span class="k">const</span><span class="o">&amp;&gt;</span><span class="p">(</span><span class="o">*</span><span class="k">this</span><span class="p">));</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="c1">// Nice macro which ensures correct CRTP usage</span>
<span class="cp">#define Derive_Shape_CRTP(Type) class Type: public Shape_CRTP&lt;Type&gt;</span>

<span class="c1">// Every derived class inherits from Shape_CRTP instead of Shape</span>
<span class="n">Derive_Shape_CRTP</span><span class="p">(</span><span class="n">Square</span><span class="p">)</span> <span class="p">{};</span>
<span class="n">Derive_Shape_CRTP</span><span class="p">(</span><span class="n">Circle</span><span class="p">)</span> <span class="p">{};</span>
</pre></div>
<p>This allows obtaining copies of squares, circles or any other shapes by <code>shapePtr-&gt;clone()</code>.</p>
<h2><span class="mw-headline" id="Pitfalls">Pitfalls</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Curiously_recurring_template_pattern&amp;action=edit&amp;section=7" title="Edit section: Pitfalls">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>One issue with static polymorphism is that without using a general base class like "Shape" from the above example, derived classes cannot be stored homogeneously as each CRTP base class is a unique type. For this reason, it is more common to inherit from a shared base class with a virtual destructor, like the example above.</p>
<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Curiously_recurring_template_pattern&amp;action=edit&amp;section=8" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a href="/wiki/Barton%E2%80%93Nackman_trick" title="Barton–Nackman trick">Barton–Nackman trick</a></li>
<li><a href="/wiki/Bounded_quantification#F-bounded_quantification" title="Bounded quantification">F-bounded quantification</a></li>
</ul>
<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Curiously_recurring_template_pattern&amp;action=edit&amp;section=9" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="reflist" style="list-style-type: decimal;">
<div class="mw-references-wrap mw-references-columns">
<ol class="references">
<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text"><cite class="citation book"><a href="/wiki/David_Abrahams_(computer_programmer)" title="David Abrahams (computer programmer)">Abrahams, David</a>; Gurtovoy, Aleksey. <i>C++ Template Metaprogramming: Concepts, Tools, and Techniques from Boost and Beyond</i>. Addison-Wesley. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/0-321-22725-5" title="Special:BookSources/0-321-22725-5">0-321-22725-5</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=C%2B%2B+Template+Metaprogramming%3A+Concepts%2C+Tools%2C+and+Techniques+from+Boost+and+Beyond&amp;rft.pub=Addison-Wesley&amp;rft.isbn=0-321-22725-5&amp;rft.aulast=Abrahams&amp;rft.aufirst=David&amp;rft.au=Gurtovoy%2C+Aleksey&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACuriously+recurring+template+pattern" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text"><cite class="citation web">William Cook; et al. (1989). <a rel="nofollow" class="external text" href="http://staff.ustc.edu.cn/~xyfeng/teaching/FOPL/lectureNotes/CookFBound89.pdf">"F-Bounded Polymorphism for Object-Oriented Programming"</a> <span style="font-size:85%;">(PDF)</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=F-Bounded+Polymorphism+for+Object-Oriented+Programming&amp;rft.date=1989&amp;rft.au=William+Cook&amp;rft_id=http%3A%2F%2Fstaff.ustc.edu.cn%2F~xyfeng%2Fteaching%2FFOPL%2FlectureNotes%2FCookFBound89.pdf&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACuriously+recurring+template+pattern" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-3">^</a></b></span> <span class="reference-text"><cite class="citation journal">Coplien, James O. (February 1995). <a rel="nofollow" class="external text" href="http://sites.google.com/a/gertrudandcope.com/info/Publications/InheritedTemplate.pdf">"Curiously Recurring Template Patterns"</a> <span style="font-size:85%;">(PDF)</span>. <i>C++ Report</i>: 24–27.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=C%2B%2B+Report&amp;rft.atitle=Curiously+Recurring+Template+Patterns&amp;rft.pages=24-27&amp;rft.date=1995-02&amp;rft.au=Coplien%2C+James+O.&amp;rft_id=http%3A%2F%2Fsites.google.com%2Fa%2Fgertrudandcope.com%2Finfo%2FPublications%2FInheritedTemplate.pdf&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACuriously+recurring+template+pattern" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-4"><span class="mw-cite-backlink"><b><a href="#cite_ref-4">^</a></b></span> <span class="reference-text"><cite class="citation book"><a href="/wiki/Timothy_Budd" title="Timothy Budd">Budd, Timothy</a> (1994). <i><a href="/w/index.php?title=Multiparadigm_programming_in_Leda&amp;action=edit&amp;redlink=1" class="new" title="Multiparadigm programming in Leda (page does not exist)">Multiparadigm programming in Leda</a></i>. Addison-Wesley. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/0-201-82080-3" title="Special:BookSources/0-201-82080-3">0-201-82080-3</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Multiparadigm+programming+in+Leda&amp;rft.pub=Addison-Wesley&amp;rft.date=1994&amp;rft.isbn=0-201-82080-3&amp;rft.aulast=Budd&amp;rft.aufirst=Timothy&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACuriously+recurring+template+pattern" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-5">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="https://web.archive.org/web/20060315072824/http://www.apostate.com/programming/atlupsidedown.html">"Apostate Café: ATL and Upside-Down Inheritance"</a>. 15 March 2006. Archived from the original on 15 March 2006<span class="reference-accessdate">. Retrieved <span class="nowrap">2016-10-09</span></span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=Apostate+Caf%C3%A9%3A+ATL+and+Upside-Down+Inheritance&amp;rft.date=2006-03-15&amp;rft_id=http%3A%2F%2Fwww.apostate.com%2Fprogramming%2Fatlupsidedown.html&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACuriously+recurring+template+pattern" class="Z3988"><span style="display:none;">&#160;</span></span><span class="citation-comment" style="display:none; color:#33aa33; margin-left:0.3em">CS1 maint: BOT: original-url status unknown (<a href="/wiki/Category:CS1_maint:_BOT:_original-url_status_unknown" title="Category:CS1 maint: BOT: original-url status unknown">link</a>)</span></span></li>
<li id="cite_note-6"><span class="mw-cite-backlink"><b><a href="#cite_ref-6">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="https://web.archive.org/web/20030604104137/http://archive.devx.com/free/mgznarch/vcdj/1999/julmag99/atlinherit1.asp">"ATL and Upside-Down Inheritance"</a>. 4 June 2003. Archived from the original on 4 June 2003<span class="reference-accessdate">. Retrieved <span class="nowrap">2016-10-09</span></span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=ATL+and+Upside-Down+Inheritance&amp;rft.date=2003-06-04&amp;rft_id=http%3A%2F%2Farchive.devx.com%2Ffree%2Fmgznarch%2Fvcdj%2F1999%2Fjulmag99%2Fatlinherit1.asp&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACuriously+recurring+template+pattern" class="Z3988"><span style="display:none;">&#160;</span></span><span class="citation-comment" style="display:none; color:#33aa33; margin-left:0.3em">CS1 maint: BOT: original-url status unknown (<a href="/wiki/Category:CS1_maint:_BOT:_original-url_status_unknown" title="Category:CS1 maint: BOT: original-url status unknown">link</a>)</span></span></li>
<li id="cite_note-7"><span class="mw-cite-backlink"><b><a href="#cite_ref-7">^</a></b></span> <span class="reference-text"><cite class="citation book"><a href="/wiki/Andrei_Alexandrescu" title="Andrei Alexandrescu">Alexandrescu, Andrei</a> (2001). <i><a href="/wiki/Modern_C%2B%2B_Design" title="Modern C++ Design">Modern C++ Design</a>: Generic Programming and Design Patterns Applied</i>. Addison-Wesley. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/0-201-70431-5" title="Special:BookSources/0-201-70431-5">0-201-70431-5</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Modern+C%2B%2B+Design%3A+Generic+Programming+and+Design+Patterns+Applied&amp;rft.pub=Addison-Wesley&amp;rft.date=2001&amp;rft.isbn=0-201-70431-5&amp;rft.aulast=Alexandrescu&amp;rft.aufirst=Andrei&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACuriously+recurring+template+pattern" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-8"><span class="mw-cite-backlink"><b><a href="#cite_ref-8">^</a></b></span> <span class="reference-text"><cite class="citation book"><a href="/wiki/James_Coplien" class="mw-redirect" title="James Coplien">Coplien, James</a>; Bjørnvig, Gertrud (2010). <i><a href="/w/index.php?title=Lean_Architecture&amp;action=edit&amp;redlink=1" class="new" title="Lean Architecture (page does not exist)">Lean Architecture</a>: for agile software development</i>. Wiley. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/0-470-68420-8" title="Special:BookSources/0-470-68420-8">0-470-68420-8</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Lean+Architecture%3A+for+agile+software+development&amp;rft.pub=Wiley&amp;rft.date=2010&amp;rft.isbn=0-470-68420-8&amp;rft.aulast=Coplien&amp;rft.aufirst=James&amp;rft.au=Bj%C3%B8rnvig%2C+Gertrud&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACuriously+recurring+template+pattern" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-9"><span class="mw-cite-backlink"><b><a href="#cite_ref-9">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="https://web.archive.org/web/20120209045146/http://www.pnotepad.org/devlog/archives/000083.html">"Simulated Dynamic Binding"</a>. 7 May 2003. Archived from <a rel="nofollow" class="external text" href="http://www.pnotepad.org/devlog/archives/000083.html">the original</a> on 9 February 2012<span class="reference-accessdate">. Retrieved <span class="nowrap">13 January</span> 2012</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=Simulated+Dynamic+Binding&amp;rft.date=2003-05-07&amp;rft_id=http%3A%2F%2Fwww.pnotepad.org%2Fdevlog%2Farchives%2F000083.html&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACuriously+recurring+template+pattern" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-10"><span class="mw-cite-backlink"><b><a href="#cite_ref-10">^</a></b></span> <span class="reference-text"><cite class="citation journal">Meyers, Scott (April 1998). <a rel="nofollow" class="external text" href="http://www.drdobbs.com/cpp/counting-objects-in-c/184403484">"Counting Objects in C++"</a>. <i>C/C++ Users Journal</i>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=C%2FC%2B%2B+Users+Journal&amp;rft.atitle=Counting+Objects+in+C%2B%2B&amp;rft.date=1998-04&amp;rft.au=Meyers%2C+Scott&amp;rft_id=http%3A%2F%2Fwww.drdobbs.com%2Fcpp%2Fcounting-objects-in-c%2F184403484&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACuriously+recurring+template+pattern" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-11"><span class="mw-cite-backlink"><b><a href="#cite_ref-11">^</a></b></span> <span class="reference-text"><cite class="citation web">Arena, Marco. <a rel="nofollow" class="external text" href="https://marcoarena.wordpress.com/2012/04/29/use-crtp-for-polymorphic-chaining/">"Use CRTP for polymorphic chaining"</a><span class="reference-accessdate">. Retrieved <span class="nowrap">15 March</span> 2017</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=Use+CRTP+for+polymorphic+chaining&amp;rft.aulast=Arena&amp;rft.aufirst=Marco&amp;rft_id=https%3A%2F%2Fmarcoarena.wordpress.com%2F2012%2F04%2F29%2Fuse-crtp-for-polymorphic-chaining%2F&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACuriously+recurring+template+pattern" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
</ol>
</div>
</div>


<!--
NewPP limit report
Parsed by mw1266
Cached time: 20180128011304
Cache expiry: 1900800
Dynamic content: false
CPU time usage: 0.144 seconds
Real time usage: 1.244 seconds
Preprocessor visited node count: 611/1000000
Preprocessor generated node count: 0/1500000
Post‐expand include size: 17386/2097152 bytes
Template argument size: 214/2097152 bytes
Highest expansion depth: 12/40
Expensive parser function count: 1/500
Lua time usage: 0.057/10.000 seconds
Lua memory usage: 2.7 MB/50 MB
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%  129.214      1 -total
 87.14%  112.596      1 Template:Reflist
 49.55%   64.030      4 Template:Cite_book
 14.21%   18.367      5 Template:Cite_web
 12.81%   16.548      1 Template:Use_dmy_dates
  9.53%   12.313      1 Template:DMCA
  8.19%   10.589      1 Template:Dated_maintenance_category
  5.94%    7.678      2 Template:Cite_journal
  5.47%    7.062      1 Template:FULLROOTPAGENAME
  3.50%    4.518      1 Template:Ns_has_subpages
-->
</div>
<!-- Saved in parser cache with key enwiki:pcache:idhash:4819306-0!canonical and timestamp 20180128011303 and revision id 811602628
 -->
<noscript><img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>					<div class="printfooter">
                                                Retrieved from "<a dir="ltr" href="https://en.wikipedia.org/w/index.php?title=Curiously_recurring_template_pattern&amp;oldid=811602628">https://en.wikipedia.org/w/index.php?title=Curiously_recurring_template_pattern&amp;oldid=811602628</a>"					</div>
				<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="/wiki/Category:Software_design_patterns" title="Category:Software design patterns">Software design patterns</a></li><li><a href="/wiki/Category:C%2B%2B" title="Category:C++">C++</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="/wiki/Category:CS1_maint:_BOT:_original-url_status_unknown" title="Category:CS1 maint: BOT: original-url status unknown">CS1 maint: BOT: original-url status unknown</a></li><li><a href="/wiki/Category:Use_dmy_dates_from_January_2012" title="Category:Use dmy dates from January 2012">Use dmy dates from January 2012</a></li><li><a href="/wiki/Category:Articles_with_example_C%2B%2B_code" title="Category:Articles with example C++ code">Articles with example C++ code</a></li></ul></div></div>				<div class="visualClear"></div>
				                        </div>
		</div>
		<div id="mw-navigation">
		        <h2>Navigation menu</h2>
			<div id="mw-head">
			                                                <div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
						<h3 id="p-personal-label">Personal tools</h3>
						<ul>
						        <li id="pt-anonuserpage">Not logged in</li><li id="pt-anontalk"><a href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]" accesskey="n">Talk</a></li><li id="pt-anoncontribs"><a href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]" accesskey="y">Contributions</a></li><li id="pt-createaccount"><a href="/w/index.php?title=Special:CreateAccount&amp;returnto=Curiously+recurring+template+pattern" title="You are encouraged to create an account and log in; however, it is not mandatory">Create account</a></li><li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Curiously+recurring+template+pattern" title="You&#039;re encouraged to log in; however, it&#039;s not mandatory. [o]" accesskey="o">Log in</a></li>						</ul>
					</div>
					                                <div id="left-navigation">
									        <div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
						<h3 id="p-namespaces-label">Namespaces</h3>
						<ul>
						        <li id="ca-nstab-main" class="selected"><span><a href="/wiki/Curiously_recurring_template_pattern" title="View the content page [c]" accesskey="c">Article</a></span></li><li id="ca-talk"><span><a href="/wiki/Talk:Curiously_recurring_template_pattern" rel="discussion" title="Discussion about the content page [t]" accesskey="t">Talk</a></span></li>						</ul>
					</div>
					                                        <div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
										                <h3 id="p-variants-label">
							<span>Variants</span>
						</h3>
						<div class="menu">
						        <ul>
							                                                                </ul>
						</div>
					</div>
					                                </div>
				<div id="right-navigation">
				                                                <div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
						<h3 id="p-views-label">Views</h3>
						<ul>
						        <li id="ca-view" class="collapsible selected"><span><a href="/wiki/Curiously_recurring_template_pattern">Read</a></span></li><li id="ca-edit" class="collapsible"><span><a href="/w/index.php?title=Curiously_recurring_template_pattern&amp;action=edit" title="Edit this page [e]" accesskey="e">Edit</a></span></li><li id="ca-history" class="collapsible"><span><a href="/w/index.php?title=Curiously_recurring_template_pattern&amp;action=history" title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>						</ul>
					</div>
					                                        <div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
						<h3 id="p-cactions-label"><span>More</span></h3>
						<div class="menu">
						        <ul>
							                                                                </ul>
						</div>
					</div>
					                                        <div id="p-search" role="search">
						<h3>
						        <label for="searchInput">Search</label>
						</h3>
						<form action="/w/index.php" id="searchform">
						        <div id="simpleSearch">
							        <input type="search" name="search" placeholder="Search Wikipedia" title="Search Wikipedia [f]" accesskey="f" id="searchInput"/><input type="hidden" value="Special:Search" name="title"/><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton"/><input type="submit" name="go" value="Go" title="Go to a page with this exact name if it exists" id="searchButton" class="searchButton"/>							</div>
						</form>
					</div>
					                                </div>
			</div>
			<div id="mw-panel">
			        <div id="p-logo" role="banner"><a class="mw-wiki-logo" href="/wiki/Main_Page"  title="Visit the main page"></a></div>
				                <div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
			<h3 id='p-navigation-label'>Navigation</h3>
			<div class="body">
			                                        <ul>
					<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li><li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li><li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li><li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li><li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li><li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li><li id="n-shoplink"><a href="//shop.wikimedia.org" title="Visit the Wikipedia store">Wikipedia store</a></li>				</ul>
					                </div>
		</div>
		        <div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>
			<h3 id='p-interaction-label'>Interaction</h3>
			<div class="body">
			                                        <ul>
					<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li><li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li><li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li><li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-contactpage"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact page</a></li>				</ul>
					                </div>
		</div>
		        <div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
			<h3 id='p-tb-label'>Tools</h3>
			<div class="body">
			                                        <ul>
					<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Curiously_recurring_template_pattern" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Curiously_recurring_template_pattern" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-upload"><a href="/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li><li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-permalink"><a href="/w/index.php?title=Curiously_recurring_template_pattern&amp;oldid=811602628" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="/w/index.php?title=Curiously_recurring_template_pattern&amp;action=info" title="More information about this page">Page information</a></li><li id="t-wikibase"><a href="https://www.wikidata.org/wiki/Special:EntityPage/Q5194797" title="Link to connected data repository item [g]" accesskey="g">Wikidata item</a></li><li id="t-cite"><a href="/w/index.php?title=Special:CiteThisPage&amp;page=Curiously_recurring_template_pattern&amp;id=811602628" title="Information on how to cite this page">Cite this page</a></li>				</ul>
					                </div>
		</div>
		        <div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>
			<h3 id='p-coll-print_export-label'>Print/export</h3>
			<div class="body">
			                                        <ul>
					<li id="coll-create_a_book"><a href="/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Curiously+recurring+template+pattern">Create a book</a></li><li id="coll-download-as-rdf2latex"><a href="/w/index.php?title=Special:ElectronPdf&amp;page=Curiously+recurring+template+pattern&amp;action=show-download-screen">Download as PDF</a></li><li id="t-print"><a href="/w/index.php?title=Curiously_recurring_template_pattern&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>				</ul>
					                </div>
		</div>
		        <div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
			<h3 id='p-lang-label'>Languages</h3>
			<div class="body">
			                                        <ul>
					<li class="interlanguage-link interwiki-hu"><a href="https://hu.wikipedia.org/wiki/Curiously_Recurring_Template_Pattern" title="Curiously Recurring Template Pattern – Hungarian" lang="hu" hreflang="hu" class="interlanguage-link-target">Magyar</a></li><li class="interlanguage-link interwiki-ru"><a href="https://ru.wikipedia.org/wiki/%D0%A1%D1%82%D1%80%D0%B0%D0%BD%D0%BD%D0%BE_%D1%80%D0%B5%D0%BA%D1%83%D1%80%D1%81%D0%B8%D0%B2%D0%BD%D1%8B%D0%B9_%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD" title="Странно рекурсивный шаблон – Russian" lang="ru" hreflang="ru" class="interlanguage-link-target">Русский</a></li><li class="interlanguage-link interwiki-uk"><a href="https://uk.wikipedia.org/wiki/%D0%94%D0%B8%D0%B2%D0%BD%D0%BE_%D1%80%D0%B5%D0%BA%D1%83%D1%80%D1%81%D0%B8%D0%B2%D0%BD%D0%B8%D0%B9_%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD" title="Дивно рекурсивний шаблон – Ukrainian" lang="uk" hreflang="uk" class="interlanguage-link-target">Українська</a></li><li class="interlanguage-link interwiki-zh"><a href="https://zh.wikipedia.org/wiki/%E5%A5%87%E5%BC%82%E9%80%92%E5%BD%92%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F" title="奇异递归模板模式 – Chinese" lang="zh" hreflang="zh" class="interlanguage-link-target">中文</a></li>				</ul>
				<div class="after-portlet after-portlet-lang"><span class="wb-langlinks-edit wb-langlinks-link"><a href="https://www.wikidata.org/wiki/Special:EntityPage/Q5194797#sitelinks-wikipedia" title="Edit interlanguage links" class="wbc-editpage">Edit links</a></span></div>			</div>
		</div>
		                </div>
		</div>
		                <div id="footer" role="contentinfo">
				                <ul id="footer-info">
						                <li id="footer-info-lastmod"> This page was last edited on 22 November 2017, at 18:25.</li>
								<li id="footer-info-copyright">Text is available under the <a rel="license" href="//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="//creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="//wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="//wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a href="//www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
                                                        </ul>
						<ul id="footer-places">
						                <li id="footer-places-privacy"><a href="https://wikimediafoundation.org/wiki/Privacy_policy" class="extiw" title="wmf:Privacy policy">Privacy policy</a></li>
								<li id="footer-places-about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
								<li id="footer-places-disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
								<li id="footer-places-contact"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
								<li id="footer-places-developers"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
								<li id="footer-places-cookiestatement"><a href="https://wikimediafoundation.org/wiki/Cookie_statement">Cookie statement</a></li>
								<li id="footer-places-mobileview"><a href="//en.m.wikipedia.org/w/index.php?title=Curiously_recurring_template_pattern&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
							</ul>
							                        <ul id="footer-icons" class="noprint">
										<li id="footer-copyrightico">
						<a href="https://wikimediafoundation.org/"><img src="/static/images/wikimedia-button.png" srcset="/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x" width="88" height="31" alt="Wikimedia Foundation"/></a>					</li>
						                                <li id="footer-poweredbyico">
						<a href="//www.mediawiki.org/"><img src="/static/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/static/images/poweredby_mediawiki_132x47.png 1.5x, /static/images/poweredby_mediawiki_176x62.png 2x" width="88" height="31"/></a>					</li>
						                        </ul>
						<div style="clear: both;"></div>
		</div>
		<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.144","walltime":"1.244","ppvisitednodes":{"value":611,"limit":1000000},"ppgeneratednodes":{"value":0,"limit":1500000},"postexpandincludesize":{"value":17386,"limit":2097152},"templateargumentsize":{"value":214,"limit":2097152},"expansiondepth":{"value":12,"limit":40},"expensivefunctioncount":{"value":1,"limit":500},"entityaccesscount":{"value":0,"limit":400},"timingprofile":["100.00%  129.214      1 -total"," 87.14%  112.596      1 Template:Reflist"," 49.55%   64.030      4 Template:Cite_book"," 14.21%   18.367      5 Template:Cite_web"," 12.81%   16.548      1 Template:Use_dmy_dates","  9.53%   12.313      1 Template:DMCA","  8.19%   10.589      1 Template:Dated_maintenance_category","  5.94%    7.678      2 Template:Cite_journal","  5.47%    7.062      1 Template:FULLROOTPAGENAME","  3.50%    4.518      1 Template:Ns_has_subpages"]},"scribunto":{"limitreport-timeusage":{"value":"0.057","limit":"10.000"},"limitreport-memusage":{"value":2834453,"limit":52428800}},"cachereport":{"origin":"mw1266","timestamp":"20180128011304","ttl":1900800,"transientcontent":false}}});});</script><script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":87,"wgHostname":"mw1267"});});</script>
	</body>
</html>
