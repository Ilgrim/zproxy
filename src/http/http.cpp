#include "http.h"
using namespace http;

const std::unordered_map<std::string, HTTP_HEADER_NAME>
    http_info::headers_names = {
        {"", HTTP_HEADER_NAME::H_NONE},
        {"Accept", HTTP_HEADER_NAME::H_ACCEPT},
        {"Accept-Charset", HTTP_HEADER_NAME::H_ACCEPT_CHARSET},
        {"Accept-Encoding", HTTP_HEADER_NAME::H_ACCEPT_ENCODING},
        {"Accept-Language", HTTP_HEADER_NAME::H_ACCEPT_LANGUAGE},
        {"Accept-Ranges", HTTP_HEADER_NAME::H_ACCEPT_RANGES},
        {"Access-Control-Allow-Credentials",
         HTTP_HEADER_NAME::H_ACCESS_CONTROL_ALLOW_CREDENTIALS},
        {"Access-Control-Allow-Headers",
         HTTP_HEADER_NAME::H_ACCESS_CONTROL_ALLOW_HEADERS},
        {"Access-Control-Allow-Methods",
         HTTP_HEADER_NAME::H_ACCESS_CONTROL_ALLOW_METHODS},
        {"Access-Control-Allow-Origin",
         HTTP_HEADER_NAME::H_ACCESS_CONTROL_ALLOW_ORIGIN},
        {"Access-Control-Expose-Headers",
         HTTP_HEADER_NAME::H_ACCESS_CONTROL_EXPOSE_HEADERS},
        {"Access-Control-Max-Age", HTTP_HEADER_NAME::H_ACCESS_CONTROL_MAX_AGE},
        {"Access-Control-Request-Headers",
         HTTP_HEADER_NAME::H_ACCESS_CONTROL_REQUEST_HEADERS},
        {"Access-Control-Request-Method",
         HTTP_HEADER_NAME::H_ACCESS_CONTROL_REQUEST_METHOD},
        {"Age", HTTP_HEADER_NAME::H_AGE},
        {"Allow", HTTP_HEADER_NAME::H_ALLOW},
        {"Authorization", HTTP_HEADER_NAME::H_AUTHORIZATION},
        {"Cache-Control", HTTP_HEADER_NAME::H_CACHE_CONTROL},
        {"Connection", HTTP_HEADER_NAME::H_CONNECTION},
        {"Content-Disposition", HTTP_HEADER_NAME::H_CONTENT_DISPOSITION},
        {"Content-Encoding", HTTP_HEADER_NAME::H_CONTENT_ENCODING},
        {"Content-Language", HTTP_HEADER_NAME::H_CONTENT_LANGUAGE},
        {"Content-Length", HTTP_HEADER_NAME::H_CONTENT_LENGTH},
        {"Content-Location", HTTP_HEADER_NAME::H_CONTENT_LOCATION},
        {"Content-Range", HTTP_HEADER_NAME::H_CONTENT_RANGE},
        {"Content-Security-Policy",
         HTTP_HEADER_NAME::H_CONTENT_SECURITY_POLICY},
        {"Content-Security-Policy-Report-Only",
         HTTP_HEADER_NAME::H_CONTENT_SECURITY_POLICY_REPORT_ONLY},
        {"Content-Type", HTTP_HEADER_NAME::H_CONTENT_TYPE},
        {"Cookie", HTTP_HEADER_NAME::H_COOKIE},
        {"Cookie2", HTTP_HEADER_NAME::H_COOKIE2},
        {"DNT", HTTP_HEADER_NAME::H_DNT},
        {"Date", HTTP_HEADER_NAME::H_DATE},
        {"ETag", HTTP_HEADER_NAME::H_ETAG},
        {"Expect", HTTP_HEADER_NAME::H_EXPECT},
        {"Expect-CT", HTTP_HEADER_NAME::H_EXPECT_CT},
        {"Expires", HTTP_HEADER_NAME::H_EXPIRES},
        {"Forwarded", HTTP_HEADER_NAME::H_FORWARDED},
        {"From", HTTP_HEADER_NAME::H_FROM},
        {"Host", HTTP_HEADER_NAME::H_HOST},
        {"If-Match", HTTP_HEADER_NAME::H_IF_MATCH},
        {"If-Modified-Since", HTTP_HEADER_NAME::H_IF_MODIFIED_SINCE},
        {"If-None-Match", HTTP_HEADER_NAME::H_IF_NONE_MATCH},
        {"If-Range", HTTP_HEADER_NAME::H_IF_RANGE},
        {"If-Unmodified-Since", HTTP_HEADER_NAME::H_IF_UNMODIFIED_SINCE},
        {"Keep-Alive", HTTP_HEADER_NAME::H_KEEP_ALIVE},
        {"Large-Allocation", HTTP_HEADER_NAME::H_LARGE_ALLOCATION},
        {"Last-Modified", HTTP_HEADER_NAME::H_LAST_MODIFIED},
        {"Location", HTTP_HEADER_NAME::H_LOCATION},
        {"Origin", HTTP_HEADER_NAME::H_ORIGIN},
        {"Pragma", HTTP_HEADER_NAME::H_PRAGMA},
        {"Proxy-Authenticate", HTTP_HEADER_NAME::H_PROXY_AUTHENTICATE},
        {"Proxy-Authorization", HTTP_HEADER_NAME::H_PROXY_AUTHORIZATION},
        {"Public-Key-Pins", HTTP_HEADER_NAME::H_PUBLIC_KEY_PINS},
        {"Public-Key-Pins-Report-Only",
         HTTP_HEADER_NAME::H_PUBLIC_KEY_PINS_REPORT_ONLY},
        {"Range", HTTP_HEADER_NAME::H_RANGE},
        {"Referer", HTTP_HEADER_NAME::H_REFERER},
        {"Referrer-Policy", HTTP_HEADER_NAME::H_REFERRER_POLICY},
        {"Retry-After", HTTP_HEADER_NAME::H_RETRY_AFTER},
        {"Server", HTTP_HEADER_NAME::H_SERVER},
        {"Set-Cookie", HTTP_HEADER_NAME::H_SET_COOKIE},
        {"Set-Cookie2", HTTP_HEADER_NAME::H_SET_COOKIE2},
        {"SourceMap", HTTP_HEADER_NAME::H_SOURCEMAP},
        {"Strict-Transport-Security",
         HTTP_HEADER_NAME::H_STRICT_TRANSPORT_SECURITY},
        {"TE", HTTP_HEADER_NAME::H_TE},
        {"Timing-Allow-Origin", HTTP_HEADER_NAME::H_TIMING_ALLOW_ORIGIN},
        {"Tk", HTTP_HEADER_NAME::H_TK},
        {"Trailer", HTTP_HEADER_NAME::H_TRAILER},
        {"Transfer-Encoding", HTTP_HEADER_NAME::H_TRANSFER_ENCODING},
        {"Upgrade-Insecure-Requests",
         HTTP_HEADER_NAME::H_UPGRADE_INSECURE_REQUESTS},
        {"User-Agent", HTTP_HEADER_NAME::H_USER_AGENT},
        {"Vary", HTTP_HEADER_NAME::H_VARY},
        {"Via", HTTP_HEADER_NAME::H_VIA},
        {"WWW-Authenticate", HTTP_HEADER_NAME::H_WWW_AUTHENTICATE},
        {"Warning", HTTP_HEADER_NAME::H_WARNING},
        {"X-Content-Type-Options", HTTP_HEADER_NAME::H_X_CONTENT_TYPE_OPTIONS},
        {"X-DNS-Prefetch-Control", HTTP_HEADER_NAME::H_X_DNS_PREFETCH_CONTROL},
        {"X-Forwarded-For", HTTP_HEADER_NAME::H_X_FORWARDED_FOR},
        {"X-Forwarded-Host", HTTP_HEADER_NAME::H_X_FORWARDED_HOST},
        {"X-Forwarded-Proto", HTTP_HEADER_NAME::H_X_FORWARDED_PROTO},
        {"X-Frame-Options", HTTP_HEADER_NAME::H_X_FRAME_OPTIONS},
        {"X-XSS-Protection", HTTP_HEADER_NAME::H_X_XSS_PROTECTION}};
const std::unordered_map<HTTP_HEADER_NAME, const char *>
    http_info::headers_names_strings = {
        {HTTP_HEADER_NAME::H_NONE, ""},
        {HTTP_HEADER_NAME::H_ACCEPT, "Accept"},
        {HTTP_HEADER_NAME::H_ACCEPT_CHARSET, "Accept-Charset"},
        {HTTP_HEADER_NAME::H_ACCEPT_ENCODING, "Accept-Encoding"},
        {HTTP_HEADER_NAME::H_ACCEPT_LANGUAGE, "Accept-Language"},
        {HTTP_HEADER_NAME::H_ACCEPT_RANGES, "Accept-Ranges"},
        {HTTP_HEADER_NAME::H_ACCESS_CONTROL_ALLOW_CREDENTIALS,
         "Access-Control-Allow-Credentials"},
        {HTTP_HEADER_NAME::H_ACCESS_CONTROL_ALLOW_HEADERS,
         "Access-Control-Allow-Headers"},
        {HTTP_HEADER_NAME::H_ACCESS_CONTROL_ALLOW_METHODS,
         "Access-Control-Allow-Methods"},
        {HTTP_HEADER_NAME::H_ACCESS_CONTROL_ALLOW_ORIGIN,
         "Access-Control-Allow-Origin"},
        {HTTP_HEADER_NAME::H_ACCESS_CONTROL_EXPOSE_HEADERS,
         "Access-Control-Expose-Headers"},
        {HTTP_HEADER_NAME::H_ACCESS_CONTROL_MAX_AGE, "Access-Control-Max-Age"},
        {HTTP_HEADER_NAME::H_ACCESS_CONTROL_REQUEST_HEADERS,
         "Access-Control-Request-Headers"},
        {HTTP_HEADER_NAME::H_ACCESS_CONTROL_REQUEST_METHOD,
         "Access-Control-Request-Method"},
        {HTTP_HEADER_NAME::H_AGE, "Age"},
        {HTTP_HEADER_NAME::H_ALLOW, "Allow"},
        {HTTP_HEADER_NAME::H_AUTHORIZATION, "Authorization"},
        {HTTP_HEADER_NAME::H_CACHE_CONTROL, "Cache-Control"},
        {HTTP_HEADER_NAME::H_CONNECTION, "Connection"},
        {HTTP_HEADER_NAME::H_CONTENT_DISPOSITION, "Content-Disposition"},
        {HTTP_HEADER_NAME::H_CONTENT_ENCODING, "Content-Encoding"},
        {HTTP_HEADER_NAME::H_CONTENT_LANGUAGE, "Content-Language"},
        {HTTP_HEADER_NAME::H_CONTENT_LENGTH, "Content-Length"},
        {HTTP_HEADER_NAME::H_CONTENT_LOCATION, "Content-Location"},
        {HTTP_HEADER_NAME::H_CONTENT_RANGE, "Content-Range"},
        {HTTP_HEADER_NAME::H_CONTENT_SECURITY_POLICY,
         "Content-Security-Policy"},
        {HTTP_HEADER_NAME::H_CONTENT_SECURITY_POLICY_REPORT_ONLY,
         "Content-Security-Policy-Report-Only"},
        {HTTP_HEADER_NAME::H_CONTENT_TYPE, "Content-Type"},
        {HTTP_HEADER_NAME::H_COOKIE, "Cookie"},
        {HTTP_HEADER_NAME::H_COOKIE2, "Cookie2"},
        {HTTP_HEADER_NAME::H_DNT, "DNT"},
        {HTTP_HEADER_NAME::H_DATE, "Date"},
        {HTTP_HEADER_NAME::H_ETAG, "ETag"},
        {HTTP_HEADER_NAME::H_EXPECT, "Expect"},
        {HTTP_HEADER_NAME::H_EXPECT_CT, "Expect-CT"},
        {HTTP_HEADER_NAME::H_EXPIRES, "Expires"},
        {HTTP_HEADER_NAME::H_FORWARDED, "Forwarded"},
        {HTTP_HEADER_NAME::H_FROM, "From"},
        {HTTP_HEADER_NAME::H_HOST, "Host"},
        {HTTP_HEADER_NAME::H_IF_MATCH, "If-Match"},
        {HTTP_HEADER_NAME::H_IF_MODIFIED_SINCE, "If-Modified-Since"},
        {HTTP_HEADER_NAME::H_IF_NONE_MATCH, "If-None-Match"},
        {HTTP_HEADER_NAME::H_IF_RANGE, "If-Range"},
        {HTTP_HEADER_NAME::H_IF_UNMODIFIED_SINCE, "If-Unmodified-Since"},
        {HTTP_HEADER_NAME::H_KEEP_ALIVE, "Keep-Alive"},
        {HTTP_HEADER_NAME::H_LARGE_ALLOCATION, "Large-Allocation"},
        {HTTP_HEADER_NAME::H_LAST_MODIFIED, "Last-Modified"},
        {HTTP_HEADER_NAME::H_LOCATION, "Location"},
        {HTTP_HEADER_NAME::H_ORIGIN, "Origin"},
        {HTTP_HEADER_NAME::H_PRAGMA, "Pragma"},
        {HTTP_HEADER_NAME::H_PROXY_AUTHENTICATE, "Proxy-Authenticate"},
        {HTTP_HEADER_NAME::H_PROXY_AUTHORIZATION, "Proxy-Authorization"},
        {HTTP_HEADER_NAME::H_PUBLIC_KEY_PINS, "Public-Key-Pins"},
        {HTTP_HEADER_NAME::H_PUBLIC_KEY_PINS_REPORT_ONLY,
         "Public-Key-Pins-Report-Only"},
        {HTTP_HEADER_NAME::H_RANGE, "Range"},
        {HTTP_HEADER_NAME::H_REFERER, "Referer"},
        {HTTP_HEADER_NAME::H_REFERRER_POLICY, "Referrer-Policy"},
        {HTTP_HEADER_NAME::H_RETRY_AFTER, "Retry-After"},
        {HTTP_HEADER_NAME::H_SERVER, "Server"},
        {HTTP_HEADER_NAME::H_SET_COOKIE, "Set-Cookie"},
        {HTTP_HEADER_NAME::H_SET_COOKIE2, "Set-Cookie2"},
        {HTTP_HEADER_NAME::H_SOURCEMAP, "SourceMap"},
        {HTTP_HEADER_NAME::H_STRICT_TRANSPORT_SECURITY,
         "Strict-Transport-Security"},
        {HTTP_HEADER_NAME::H_TE, "TE"},
        {HTTP_HEADER_NAME::H_TIMING_ALLOW_ORIGIN, "Timing-Allow-Origin"},
        {HTTP_HEADER_NAME::H_TK, "Tk"},
        {HTTP_HEADER_NAME::H_TRAILER, "Trailer"},
        {HTTP_HEADER_NAME::H_TRANSFER_ENCODING, "Transfer-Encoding"},
        {HTTP_HEADER_NAME::H_UPGRADE_INSECURE_REQUESTS,
         "Upgrade-Insecure-Requests"},
        {HTTP_HEADER_NAME::H_USER_AGENT, "User-Agent"},
        {HTTP_HEADER_NAME::H_VARY, "Vary"},
        {HTTP_HEADER_NAME::H_VIA, "Via"},
        {HTTP_HEADER_NAME::H_WWW_AUTHENTICATE, "WWW-Authenticate"},
        {HTTP_HEADER_NAME::H_WARNING, "Warning"},
        {HTTP_HEADER_NAME::H_X_CONTENT_TYPE_OPTIONS, "X-Content-Type-Options"},
        {HTTP_HEADER_NAME::H_X_DNS_PREFETCH_CONTROL, "X-DNS-Prefetch-Control"},
        {HTTP_HEADER_NAME::H_X_FORWARDED_FOR, "X-Forwarded-For"},
        {HTTP_HEADER_NAME::H_X_FORWARDED_HOST, "X-Forwarded-Host"},
        {HTTP_HEADER_NAME::H_X_FORWARDED_PROTO, "X-Forwarded-Proto"},
        {HTTP_HEADER_NAME::H_X_FRAME_OPTIONS, "X-Frame-Options"},
        {HTTP_HEADER_NAME::H_X_XSS_PROTECTION, "X-XSS-Protection"}};

const std::unordered_map<REQUEST_METHOD, const char *>
    http_info::http_verb_strings{
        {REQUEST_METHOD::RM_ACL, "ACL"},
        {REQUEST_METHOD::RM_BASELINE_CONTROL, "BASELINE-CONTROL"},
        {REQUEST_METHOD::RM_BCOPY, "BCOPY"},
        {REQUEST_METHOD::RM_BDELETE, "BDELETE"},
        {REQUEST_METHOD::RM_BIND, "BIND"},
        {REQUEST_METHOD::RM_BMOVE, "BMOVE"},
        {REQUEST_METHOD::RM_BPROPFIND, "BPROPFIND"},
        {REQUEST_METHOD::RM_BPROPPATCH, "BPROPPATCH"},
        {REQUEST_METHOD::RM_CHECKIN, "CHECKIN"},
        {REQUEST_METHOD::RM_CHECKOUT, "CHECKOUT"},
        {REQUEST_METHOD::RM_CONNECT, "CONNECT"},
        {REQUEST_METHOD::RM_COPY, "COPY"},
        {REQUEST_METHOD::RM_DELETE, "DELETE"},
        {REQUEST_METHOD::RM_GET, "GET"},
        {REQUEST_METHOD::RM_HEAD, "HEAD"},
        {REQUEST_METHOD::RM_LABEL, "LABEL"},
        {REQUEST_METHOD::RM_LINK, "LINK"},
        {REQUEST_METHOD::RM_LOCK, "LOCK"},
        {REQUEST_METHOD::RM_MERGE, "MERGE"},
        {REQUEST_METHOD::RM_MKACTIVITY, "MKACTIVITY"},
        {REQUEST_METHOD::RM_MKCALENDAR, "MKCALENDAR"},
        {REQUEST_METHOD::RM_MKCOL, "MKCOL"},
        {REQUEST_METHOD::RM_MKREDIRECTREF, "MKREDIRECTREF"},
        {REQUEST_METHOD::RM_MKWORKSPACE, "MKWORKSPACE"},
        {REQUEST_METHOD::RM_MOVE, "MOVE"},
        {REQUEST_METHOD::RM_NOTIFY, "NOTIFY"},
        {REQUEST_METHOD::RM_OPTIONS, "OPTIONS"},
        {REQUEST_METHOD::RM_ORDERPATCH, "ORDERPATCH"},
        {REQUEST_METHOD::RM_PATCH, "PATCH"},
        {REQUEST_METHOD::RM_POLL, "POLL"},
        {REQUEST_METHOD::RM_POST, "POST"},
        {REQUEST_METHOD::RM_PRI, "PRI"},
        {REQUEST_METHOD::RM_PROPFIND, "PROPFIND"},
        {REQUEST_METHOD::RM_PROPPATCH, "PROPPATCH"},
        {REQUEST_METHOD::RM_PUT, "PUT"},
        {REQUEST_METHOD::RM_REBIND, "REBIND"},
        {REQUEST_METHOD::RM_REPORT, "REPORT"},
        {REQUEST_METHOD::RM_RPC_IN_DATA, "RPC_IN_DATA"},
        {REQUEST_METHOD::RM_RPC_OUT_DATA, "RPC_OUT_DATA"},
        {REQUEST_METHOD::RM_SEARCH, "SEARCH"},
        {REQUEST_METHOD::RM_SUBSCRIBE, "SUBSCRIBE"},
        {REQUEST_METHOD::RM_TRACE, "TRACE"},
        {REQUEST_METHOD::RM_UNBIND, "UNBIND"},
        {REQUEST_METHOD::RM_UNCHECKOUT, "UNCHECKOUT"},
        {REQUEST_METHOD::RM_UNLINK, "UNLINK"},
        {REQUEST_METHOD::RM_UNLOCK, "UNLOCK"},
        {REQUEST_METHOD::RM_UNSUBSCRIBE, "UNSUBSCRIBE"},
        {REQUEST_METHOD::RM_UPDATE, "UPDATE"},
        {REQUEST_METHOD::RM_UPDATEREDIRECTREF, "UPDATEREDIRECTREF"},
        {REQUEST_METHOD::RM_VERSION_CONTROL, "VERSION-CONTROL"},
        {REQUEST_METHOD::RM_X_MS_ENUMATTS, "X_MS_ENUMATTS"}};

const std::unordered_map<std::string, REQUEST_METHOD> http_info::http_verbs = {
    {"ACL", REQUEST_METHOD::RM_ACL},
    {"BASELINE-CONTROL", REQUEST_METHOD::RM_BASELINE_CONTROL},
    {"BCOPY", REQUEST_METHOD::RM_BCOPY},
    {"BDELETE", REQUEST_METHOD::RM_BDELETE},
    {"BIND", REQUEST_METHOD::RM_BIND},
    {"BMOVE", REQUEST_METHOD::RM_BMOVE},
    {"BPROPFIND", REQUEST_METHOD::RM_BPROPFIND},
    {"BPROPPATCH", REQUEST_METHOD::RM_BPROPPATCH},
    {"CHECKIN", REQUEST_METHOD::RM_CHECKIN},
    {"CHECKOUT", REQUEST_METHOD::RM_CHECKOUT},
    {"CONNECT", REQUEST_METHOD::RM_CONNECT},
    {"COPY", REQUEST_METHOD::RM_COPY},
    {"DELETE", REQUEST_METHOD::RM_DELETE},
    {"GET", REQUEST_METHOD::RM_GET},
    {"HEAD", REQUEST_METHOD::RM_HEAD},
    {"LABEL", REQUEST_METHOD::RM_LABEL},
    {"LINK", REQUEST_METHOD::RM_LINK},
    {"LOCK", REQUEST_METHOD::RM_LOCK},
    {"MERGE", REQUEST_METHOD::RM_MERGE},
    {"MKACTIVITY", REQUEST_METHOD::RM_MKACTIVITY},
    {"MKCALENDAR", REQUEST_METHOD::RM_MKCALENDAR},
    {"MKCOL", REQUEST_METHOD::RM_MKCOL},
    {"MKREDIRECTREF", REQUEST_METHOD::RM_MKREDIRECTREF},
    {"MKWORKSPACE", REQUEST_METHOD::RM_MKWORKSPACE},
    {"MOVE", REQUEST_METHOD::RM_MOVE},
    {"NOTIFY", REQUEST_METHOD::RM_NOTIFY},
    {"OPTIONS", REQUEST_METHOD::RM_OPTIONS},
    {"ORDERPATCH", REQUEST_METHOD::RM_ORDERPATCH},
    {"PATCH", REQUEST_METHOD::RM_PATCH},
    {"POLL", REQUEST_METHOD::RM_POLL},
    {"POST", REQUEST_METHOD::RM_POST},
    {"PRI", REQUEST_METHOD::RM_PRI},
    {"PROPFIND", REQUEST_METHOD::RM_PROPFIND},
    {"PROPPATCH", REQUEST_METHOD::RM_PROPPATCH},
    {"PUT", REQUEST_METHOD::RM_PUT},
    {"REBIND", REQUEST_METHOD::RM_REBIND},
    {"REPORT", REQUEST_METHOD::RM_REPORT},
    {"RPC_IN_DATA", REQUEST_METHOD::RM_RPC_IN_DATA},
    {"RPC_OUT_DATA", REQUEST_METHOD::RM_RPC_OUT_DATA},
    {"SEARCH", REQUEST_METHOD::RM_SEARCH},
    {"SUBSCRIBE", REQUEST_METHOD::RM_SUBSCRIBE},
    {"TRACE", REQUEST_METHOD::RM_TRACE},
    {"UNBIND", REQUEST_METHOD::RM_UNBIND},
    {"UNCHECKOUT", REQUEST_METHOD::RM_UNCHECKOUT},
    {"UNLINK", REQUEST_METHOD::RM_UNLINK},
    {"UNLOCK", REQUEST_METHOD::RM_UNLOCK},
    {"UNSUBSCRIBE", REQUEST_METHOD::RM_UNSUBSCRIBE},
    {"UPDATE", REQUEST_METHOD::RM_UPDATE},
    {"UPDATEREDIRECTREF", REQUEST_METHOD::RM_UPDATEREDIRECTREF},
    {"VERSION-CONTROL", REQUEST_METHOD::RM_VERSION_CONTROL},
    {"X_MS_ENUMATTS", REQUEST_METHOD::RM_X_MS_ENUMATTS}};

const std::unordered_map<validation::REQUEST_RESULT, const std::string>
    validation::request_result_reason = {
        {REQUEST_RESULT::OK, "valid request"},
        {REQUEST_RESULT::METHOD_NOT_ALLOWED, "Method not allowed"},
        {REQUEST_RESULT::BAD_REQUEST, "Bad request"},
        {REQUEST_RESULT::BAD_URL, "Bad URL"},
        {REQUEST_RESULT::URL_CONTAIN_NULL, "URL contains null"},
        {REQUEST_RESULT::REQUEST_TOO_LARGE, "Request too large"},
        {REQUEST_RESULT::SERVICE_NOT_FOUND, "no service"},
        {REQUEST_RESULT::BACKEND_NOT_FOUND, "no backend"},
        {REQUEST_RESULT::BACKEND_TIMEOUT, "Backend response timeout"},
};
