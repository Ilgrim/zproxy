#pragma once
#include <string>

#define ZHTTP_VERSION_MAJOR @PROJECT_VERSION_MAJOR@
#define ZHTTP_VERSION_MINOR @PROJECT_VERSION_MINOR@
#define ZHTTP_VERSION_PATCH @PROJECT_VERSION_PATCH@
#define ZHTTP_VERSION_TWEAK @PROJECT_VERSION_TWEAK@
#define ZHTTP_VERSION "@PROJECT_VERSION@"
#define ZHTTP_GIT_REF "@PROJECT_GIT_REF@"
#define ZHTTP_SOURCE_VERSION "@PROJECT_SOURCE_VERSION@"
#define ZHTTP_BUILD_DATE "@PROJECT_BUILD_DATE@"
#define ZHTTP_BUILD_TIME "@PROJECT_BUILD_TIME@"
#define ZHTTP_BUILD_INFO "@PROJECT_COMPILER_INFO@ @PROJECT_BUILD_TYPE@ @PROJECT_BUILD_INFO@ @PROJECT_BUILD_DATE@ @PROJECT_BUILD_TIME@"
#define ZHTTP_HOST_INFO "@PROJECT_HOST_INFO@"
#define ZHTTP_COPYRIGHT "@PROJECT_COPYRIGHT@"

struct ZhttpInfo{
    static std::string version_major ()  { return  "@PROJECT_VERSION_MAJOR@"; }
    static std::string version_minor ()  { return  "@PROJECT_VERSION_MINOR@"; }
    static std::string version_patch ()  { return  "@PROJECT_VERSION_PATCH@"; }
    static std::string version_tweak ()  { return  "@PROJECT_VERSION_TWEAK@"; }
    static std::string version ()  { return  "@PROJECT_VERSION@"; }
    static std::string git_ref ()  { return  "@PROJECT_GIT_REF@"; }
    static std::string source_version ()  { return  "@PROJECT_SOURCE_VERSION@"; }
    static std::string build_date ()  { return  "@PROJECT_BUILD_DATE@"; }
    static std::string build_time ()  { return  "@PROJECT_BUILD_TIME@"; }
    static std::string build_info ()  { return  "@PROJECT_COMPILER_INFO@ @PROJECT_BUILD_TYPE@ @PROJECT_BUILD_INFO@ @PROJECT_BUILD_DATE@ @PROJECT_BUILD_TIME@"; }
    static std::string host_info ()  { return  "@PROJECT_HOST_INFO@"; }
    static std::string copyright ()  { return  "@PROJECT_COPYRIGHT@"; }
};


